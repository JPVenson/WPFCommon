<Window x:Class="WpfApplication1.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:wpfApplication1="clr-namespace:WpfApplication1"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:validationTyps="clr-namespace:JPB.ErrorValidation.ValidationTyps;assembly=JPB.ErrorValidation"
        xmlns:objectModel="clr-namespace:System.Collections.ObjectModel;assembly=System"
        xmlns:validationRules="clr-namespace:JPB.ErrorValidation.ValidationRules;assembly=JPB.ErrorValidation"
        mc:Ignorable="d"
        Title="MainWindow" Height="350" Width="525"
        d:DataContext="{d:DesignInstance wpfApplication1:TestWindowViewModel}">

    <Window.Resources>
        <DataTemplate x:Key="validation" DataType="{x:Type validationTyps:IValidation}">
            <Label Content="{Binding ErrorText}" />
        </DataTemplate>

        <DataTemplate DataType="{x:Type ValidationError}">
            <ContentControl Content="{Binding ErrorContent}" ContentTemplate="{StaticResource validation}"/>
        </DataTemplate>

        <DataTemplate x:Key="xxx">
            <!--<Label Content="{Binding}"></Label>-->
            <GroupBox Header="{Binding Count}">
                <ListBox ItemsSource="{Binding}" />
            </GroupBox>
        </DataTemplate>

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid>
                            <Border BorderBrush="#FFCB2E2E" BorderThickness="1" Background="#11FF0000"
                                    IsHitTestVisible="False" x:Name="errorBorder" />
                            <AdornedElementPlaceholder x:Name="placeholder" />
                            <Popup AllowsTransparency="True" HorizontalAlignment="Right" HorizontalOffset="0"
                                   VerticalOffset="0" PopupAnimation="Fade" Placement="Right"
                                   PlacementTarget="{Binding ElementName=errorBorder}"
                                   IsOpen="{Binding ElementName=placeholder, Path=AdornedElement.IsFocused, Mode=OneWay}">
                                <StackPanel Orientation="Horizontal">
                                    <Polygon VerticalAlignment="Center" Points="0,4 4,0 4,8" Fill="#FFCB2E2E"
                                             Stretch="Fill" Stroke="#FFCB2E2E"
                                             StrokeThickness="2" />
                                    <Border Background="#FFCB2E2E" CornerRadius="4" Padding="4">
                                        <ContentControl ContentTemplate="{StaticResource xxx}" Content="{Binding }"/>
                                        <!--<TextBlock HorizontalAlignment="Center" Foreground="White" FontWeight="Bold"
                                                   Margin="2,0,0,0"
                                                   Text="{Binding ElementName=placeholder, Path=AdornedElement.ToolTip, Mode=OneWay}" />-->
                                    </Border>
                                </StackPanel>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!--<Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip">
                        <Setter.Value>
                            <ContentControl ContentTemplate="{StaticResource xxx}" Content="{Binding RelativeSource={RelativeSource Self},
                                                Path=(Validation.Errors),
                                                NotifyOnSourceUpdated=True,
                                                UpdateSourceTrigger=PropertyChanged,
                                                Mode=OneWay}"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>-->
        </Style>
        <Style x:Key="targetStyle" TargetType="TextBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <ContentControl
                                Grid.Row="0"
                                Grid.Column="0">
                                <ContentControl.Style>
                                    <Style TargetType="ContentControl">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding }" />
                                        </Style.Triggers>
                                    </Style>
                                </ContentControl.Style>
                            </ContentControl>

                            <TextBox x:Name="PlaceholderTextContentPresenter"
                                     Grid.Row="0"
                                     Grid.Column="1"
                                     Margin="{TemplateBinding BorderThickness}"
                                     Padding="{TemplateBinding Padding}"
                                     IsTabStop="False"
                                     Text="{Binding Text,RelativeSource={RelativeSource TemplatedParent}}"
                                     IsHitTestVisible="False" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <DockPanel>
        <Button DockPanel.Dock="Top" Command="{Binding TaskACommand}">TaskA</Button>
        <Button DockPanel.Dock="Top" Command="{Binding TaskBCommand}">TaskB</Button>
        <Label DockPanel.Dock="Top" Content="{Binding IsValidating}" />
		<DockPanel DockPanel.Dock="Top">
			<TextBlock DockPanel.Dock="Right" Text="{Binding IsValidating}"/>
			<TextBox DockPanel.Dock="Left"
					 
                 Text="{Binding ToValidationString, Mode=TwoWay,
                 ValidatesOnDataErrors=True,
                 NotifyOnValidationError=True,
                 UpdateSourceTrigger=PropertyChanged}"
                 Height="25" />
		</DockPanel>
		
		
		<ItemsControl DockPanel.Dock="Top" ItemsSource="{Binding ActiveValidationCases}">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding ErrorText}" Foreground="Red" />
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <!--<TextBox
            Style="{StaticResource {x:Type TextBox}}"
            DockPanel.Dock="Top"
                 Text="{Binding ToValidationString, ValidatesOnNotifyDataErrors=True, UpdateSourceTrigger=PropertyChanged}" />

        <TextBox DockPanel.Dock="Top" Text="{Binding ToValidationString, UpdateSourceTrigger=PropertyChanged}"/>
        <Label Content="{Binding Error}"></Label>-->
    </DockPanel>
</Window>